openapi: 3.0.0

info:
  title: Music Service Auth
  description: Home music library service
  version: 1.0.0

servers:
  - url: http://localhost:{port}
    description: Development server
    variables:
      port:
        default: '4000'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: 'Not found'
        statusCode:
          type: number
          example: 404

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        login:
          type: string
          example: Artemy
        version:
          type: number
          example: 1
        createAt:
          type: number
          format: timestamp
          example: 1709905633226
        updateAt:
          type: number
          format: timestamp
          example: 1709905633226
      required:
        - id
        - login
        - password

  responses:
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /auth/login:
    post:
      tags:
        - Auth
      security: []
      summary: Login
      description: Logins a user and returns a JWT-tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: example
              properties:
                login:
                  type: string
                  description: Username
                  example: artesha
                password:
                  type: string
                  description: Password
                  example: qwerty
      responses:
        200:
          description: Successful login.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                description: JWT Token
          headers:
            Set-Cookie:
              description: REFRESH_TOKEN
              schema:
                type: string
        401:
          description: Incorrect login or password

  /auth/register:
    post:
      tags:
        - Auth
      security: []
      summary: Register
      description: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: example
              properties:
                login:
                  type: string
                  description: Username
                  example: artesha
                password:
                  type: string
                  description: Password
                  example: qwerty
                email:
                  type: string
                  description: Email
                  example: qwerty@qwrt.com
      responses:
        200:
          description: Successful login.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                description: JWT Tokens
        401:
          description: Incorrect login or password

  /auth/password/change:
    post:
      tags:
        - Auth
      summary: Change password
      description: Changes password for the current user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: example
              properties:
                currentPassword:
                  type: string
                  description: Current password
                  example: qwerty
                password:
                  type: string
                  description: New password
                  example: qwerty123
                passwordConfirm:
                  type: string
                  description: New password confirmation
                  example: qwerty123
              required:
                - user
                - login
      responses:
        200:
          description: Password has been changed
        400:
          description: New password and password confirmation do not match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/password/reset:
    get:
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
      tags:
        - Auth
      summary: Reset password
      description: Sends password reset link
      responses:
        200:
          description: Reset email has been sent
        404:
          $ref: '#/components/responses/404'

    post:
      tags:
        - Auth
      summary: Reset password
      description: Resets password for the provided email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: example
              properties:
                email:
                  type: string
                  example: test@test.kz
                password:
                  type: string
                  example: qwerty123
                passwordConfirm:
                  type: string
                  example: qwerty123
      responses:
        200:
          description: Reset email has been sent
        404:
          $ref: '#/components/responses/404'
